'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _class, _class2, _temp2;

var _react = require('react');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactRedux = require('react-redux');

var _lodash = require('lodash.map');

var _lodash2 = _interopRequireDefault(_lodash);

var _actions = require('./redux/actions');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ReactReduxInternetConnection = (_dec = (0, _reactRedux.connect)(function () {
  return {};
}, { online: _actions.online, offline: _actions.offline }), _dec(_class = (_temp2 = _class2 = function (_PureComponent) {
  _inherits(ReactReduxInternetConnection, _PureComponent);

  function ReactReduxInternetConnection() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, ReactReduxInternetConnection);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ReactReduxInternetConnection.__proto__ || Object.getPrototypeOf(ReactReduxInternetConnection)).call.apply(_ref, [this].concat(args))), _this), _this.componentDidMount = function () {
      if (navigator.onLine) {
        _this.props.online();
      } else {
        _this.props.offline();
      }
      _this.handleEventListeners([{ key: 'online', func: _this.props.online, type: 'addEventListener' }, { key: 'offline', func: _this.props.offline, type: 'addEventListener' }]);
    }, _this.componentWillUnmount = function () {
      return _this.handleEventListeners([{ key: 'online', func: _this.props.online, type: 'removeEventListener' }, { key: 'offline', func: _this.props.online, type: 'removeEventListener' }]);
    }, _this.handleEventListeners = function (items) {
      return (0, _lodash2.default)(items, function (item) {
        return window[item.type](item.key, item.func);
      });
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(ReactReduxInternetConnection, [{
    key: 'render',
    value: function render() {
      return null;
    }
  }]);

  return ReactReduxInternetConnection;
}(_react.PureComponent), _class2.propTypes = {
  online: _propTypes2.default.func,
  offline: _propTypes2.default.func
}, _temp2)) || _class);
exports.default = ReactReduxInternetConnection;