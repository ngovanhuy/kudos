import { PureComponent } from 'react';
import PropTypes from 'prop-types';
import { connect } from 'react-redux';
import map from 'lodash.map';
import { online, offline } from './redux/actions';


@connect(() => ({}), { online, offline })


export default class ReactReduxInternetConnection extends PureComponent {

  static propTypes = {
    online: PropTypes.func,
    offline: PropTypes.func
  };

  componentDidMount = () => {
    if (navigator.onLine) {
      this.props.online();
    } else {
      this.props.offline();
    }
    this.handleEventListeners([
      { key: 'online', func: this.props.online, type: 'addEventListener' },
      { key: 'offline', func: this.props.offline, type: 'addEventListener' }
    ]);
  };

  componentWillUnmount = () =>
    this.handleEventListeners([
      { key: 'online', func: this.props.online, type: 'removeEventListener' },
      { key: 'offline', func: this.props.online, type: 'removeEventListener' }
    ]);

  handleEventListeners = items =>
    map(items, item => window[item.type](item.key, item.func))

  render() {
    return null;
  }
}
